<!DOCTYPE html>
<html>

<head>
    <meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />
    <title>linked</title>
    <base target="_blank" />

    <script src="./jq/jquery.js"></script>
    <script src="https://code.jquery.com/ui/1.13.0/jquery-ui.js"></script>




    <!-- Demo styling -->

    <style type="text/css">
        body {
            height: 100%;
            width: 1130px;
            /* 595px */
            /* to centre page on screen*/

            border: 1px 1px 1px 1px solid grey;


        }


        /*
        tr td:nth-child(3),
        tr td:nth-child(4),
        tr td:nth-child(5),
        tr td:nth-child(6),
        tr td:nth-child(8),
        tr td:nth-child(9),
        tr td:nth-child(10),
        tr td:nth-child(11),
        tr td:nth-child(12),
        tr td:nth-child(13),
        tr td:nth-child(14),
        tr td:nth-child(15),
        tr td:nth-child(16),

        tr th:nth-child(3),
        tr th:nth-child(4),
        tr th:nth-child(5),
        tr th:nth-child(6),
        tr th:nth-child(8),
        tr th:nth-child(9),
        tr th:nth-child(10),
        tr th:nth-child(11),
        tr th:nth-child(12),
        tr th:nth-child(13),
        tr th:nth-child(14),
        tr th:nth-child(15),
        tr th:nth-child(16) {
            visibility: hidden;
            display: none;
        }
        */




        @media print {
            .pagebreak {
                page-break-before: always;
            }

            /* page-break-after works, as well */
        }

        table {
            border-collapse: collapse;
        }

        table.Compact {}

        td {
            padding: 0px;
            border: 1px solid #ddd;
            text-align: left;

            height: 30px;
        }

        td[contenteditable] {
            width: 100%;
            background-color: yellow;
        }

        .toggle_Hili {
            background-color: red;
        }




        #LabelHeadLine {
            position: absolute;
            width: 1130px;
            top: 0;
            float: right;
        }

        #PMtoggler {
            float: right;
        }

        #PopupMenu {
            position: fixed;

            background-color: lightblue;
            left: 600px;
            top: 20px;
            width: 550px;

            font-size: medium;
        }

        #txa {}

        .fixed_draggy{
            position: fixed;
            top:0px;
            left:0px;
        }
        .draggy {
            border: 1px solid black;
            padding-top: 10px;

            width: 30px;
        }

        .draggable_disableed {
            resize: both;
            overflow: auto;
        }

        .draggy textarea {}
    </style>

</head>

<script>
    $(document).ready(function () {
        $("#deleter").on("click", function () {
            var pid = $(this).text()
            if (pid) {
                $(`.draggy[pid='${pid}']`).remove()
                delete_position(pid)
            }
        })
    });

    function createnew() {
        var pid = -1
        var positions = get_positions()
        while (1) {
            pid++
            if (!positions[pid]) {
                positions[pid] = { text: pid }
                break
            }
        }
        var pos={}
        pos[pid] = positions[pid]
        create_draggy(pos)
        enable_draggy()
        localStorage.positions = JSON.stringify(positions)
    }

</script>


<body>
    <div class="newelement" contenteditable="true">

    </div>

    <div id="PopupMenu">
        <button onclick="createnew();">create</button>
        <button id="deleter">deleter</button>
        <div id="chkboxholder_Types"></div>
        <hr />
        <input type="radio" onclick="hili_checked();">HiliChecked</input><br>

        <textarea id="txa"></textarea><br>
        <input type="checkbox" onclick="page_menu.toggleDrag(this)">draggable</input>
        <input type="radio" name="opr" onclick="append_new_tr()">append_new_tr</input>
        <hr />
        <input type="radio" name="opr" onclick="roots_linked_str.update_edited_str()">update_edited_str</input>
        <input type="radio" name="opr" onclick="roots_linked_str.export_d3_links()">export_d3_links</input>
        <input type="radio" name="opr" onclick="roots_linked_str.stat_table('#status')">stat_linked_str</input>
        <table border="1">
            <thead id="thd1"></thead>
            <tbody id="tbdy1"></tbody>
        </table>
    </div>





    <script>







        $(document).ready(function () {
            var positions = get_positions()
            create_draggy(positions)
            enable_draggy()
            remember_draggy_positions(positions)
        })
        function create_draggy(positions) {
            var divs = ""
            for (let [pid, obj] of Object.entries(positions)) {
                if (pid.length === 0) continue
                divs += `<div contenteditable='true' class='draggy' pid='${pid}'>${obj.text}</div>`;
            }
            $("body").append(divs)
            //$(".fixed_draggy").addClass("draggy").removeClass("fixed_draggy")
        }

        function remember_draggy_positions() {
            ////
            var positions = get_positions()
            ////
            for (let [pid, obj] of Object.entries(positions)) {
                if(obj.top<0) obj.top = 0
                if(obj.left<0) obj.left = 0
                $(`.draggy[pid='${pid}']`).css("left", obj.left + "px").css("top", obj.top + "px").css("width", obj.width).css("height", obj.height).text(obj.text)
            }
        }
        function delete_position(pid) {
            var pos = get_positions()
            delete pos[pid]
            localStorage.positions = JSON.stringify(pos)

        }
        function get_positions() {
            var positions = localStorage.positions
            if (!positions) {
                positions = {}
            }
            else {
                positions = JSON.parse(positions)
            }
            return positions
        }
        function enable_draggy() {
            //var tot_draggy = $(".draggy").length
            $(".draggy").each(function (i) {
                if ($(this).hasClass("draggy_enabled")) return
                $(this).addClass("draggy_enabled")
                //$(this).removeClass("newelement")
                //$(this).attr('pid', tot_draggy + i)
                $(this).draggable({
                    disabled: false,
                    stop: function (event, ui) {
                        var pid = $(this).attr('pid')
                        var positions = get_positions()
                        positions[pid] = ui.position
                        positions[pid].width = $(this).css("width")
                        positions[pid].height = $(this).css("height")
                        positions[pid].text = $(this).text()

                        localStorage.positions = JSON.stringify(positions)
                    }
                });
                $(this).on("click", function () {
                    var pid = $(this).attr('pid')
                    $("#deleter").text(pid)
                    $(this).toggleClass("draggable_disableed")
                    var draggable_disableed = $(this).hasClass("draggable_disableed")
                    $(this).draggable({
                        disabled: draggable_disableed,
                    });

                })
            })
            //return positions
        }

    </script>
    <table class="Compact">
        <thead>
            <tr>
                <td>#</td>
                <td>str</td>
                <td>desc</td>
            </tr>
        </thead>
        <tbody id="tbd"></tbody>
    </table>

    <div id="status"></div>



</body>


</html>