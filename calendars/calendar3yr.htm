<html>

<head>
    <title onclick="alert();">Calendar</title>
    <META http-equiv="Content-Type" content="text/html;" charset="UTF-8">
    <META name="viewport" content="width=device-witdh, initial-scale=1, maximum-scale=1, user-scale=0">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <!------->
    <base xtarget="_blank" />




    <style type="text/css">
        body {
            font-family: 'Times New Roman';


        }

        #_MenuPanel {
            position: fixed;
            background-color: lightgray;
            left: 10px;
            top: 55px;
        }

        #menuPanelToggler {
            position: fixed;
            top: 1px;
            left: 1px;
            padding: 10px;
            margin: 10px;
        }









        .hili_td {
            border: 2px solid yellow;
        }

        .hili_day {
            border: 2px solid green;
        }

        .leftbox {
            background-color: #ff0000;
        }



        .hebrew {
            FONT-SIZE: 23px;
            COLOR: #001320;
            LINE-HEIGHT: 33px;
            font-family: Ezra SIL, SBL Hebrew, Palatino Linotype, Palatino, Century Schoolbook L, Times New Roman, Cardo, Arial, Helvetica, Sans-serif;
            TEXT-DECORATION: none;
        }








        table {
            table-layout: fixed;
            margin-left: auto;
            margin-right: auto;
        }

        table caption {
            margin-top: 20px;
        }

        #tab0 {
            margin-top: 150px;
            border-collapse: collapse;
        }

        #tab2 {
            margin-bottom: 100px;
            border: 1px solid grey;
        }

        thead,
        th {
            background-color: #999999;
        }



        td {
            width: 60px;
            vertical-align: top
        }

        .thidx {
            font-size: small;
        }


        .month1 {
            background-color: #E6E6E6;
        }

        .month2 {
            background-color: #98BAE7;
        }

        .month3 {
            background-color: #B8E4F0;
        }

        .month4 {
            background-color: rgb(223, 240, 128);
        }

        .month5 {
            background-color: #CCFFBD;
        }

        .month6 {
            background-color: rgb(132, 240, 128);
        }

        .month7 {
            background-color: rgb(188, 240, 128);

        }

        .month8 {
            background-color: #FFD384;
        }

        .month9 {
            background-color: #FFAEC0;
        }

        .month10 {
            background-color: rgb(233, 220, 47);
        }

        .month11 {
            background-color: #BECA5C;
        }

        .month12 {
            background-color: #C996CC;
        }

        .month_mark {
            padding-left: 2px;
            padding-right: 1px;
            font-weight: lighter;
        }



        div.notes {
            margin-left: 1px;
            display: block;
            color: blue;

            font-size: small;

            overflow: hidden;

            white-space: nowrap;

            height: 50px;
        }

        .notes:focus {
            background-color: yellow;
        }

        .notes ol,
        .notes ul {
            margin-left: -25px;
            margin-top: 0px;
            padding-top: 0px;
        }

        .notes ul li {
            margin-left: -2px;
            padding-left: -200px;
        }


        a.sday {
            font-size: xx-large;
        }

        a[iweek='0'],
        a[iweek='6'] {
            color: red;
        }

        a[iweek='3'] {
            color: rgb(89, 89, 247);
        }

        .today {
            border: 5px solid cyan;
            animation: blinkingBackground 3s infinite;
        }

        @keyframes blinkingBackground {
            20% {
                opacity: 0;
            }

            30% {
                opacity: .5;
            }

            100% {
                opacity: 1;
            }
        }

        .hili_notes {
            background-color: yellow;
        }


        #editorboard {

            background-color: yellow;
            display: none;
            white-space: nowrap;

            height: 200px;
            padding: 20px 20px;

            margin-left: auto;
            margin-right: auto;

            overflow: scroll;
            font-size: large;
        }

        #editxt {
            background-color: lightyellow;

            white-space: nowrap;


            padding: 3px;

            width: 100%;

            overflow: scroll;
            font-size: large;
        }

        #editxt div {
            border: 1px dotted gray;
            padding: 10px 0px 10px 0px;
        }

        #outx {
            overflow: scroll;
            white-space: pre;
        }


        /**********/

        .cmp div {
            overflow: scroll;
            white-space: nowrap;
        }

        div.cmpitm{
            width: 100%;
        }
        div.Hili_cmp {
            background-color: lightgreen;
        }
    </style>
    <script>
        $(function () {
            setTimeout(function () {
                gen_calendar("#tab0", -1)
                gen_calendar("#tab1", 0)
                gen_calendar("#tab2", 1)

                $("#tab0 tbody").slideUp()
                $("#tab2 tbody").slideUp()

                post_gen()

            }, 100)


            $("#menuPanelToggler").on("click", function () {
                $("#_MenuPanel").slideToggle()
            })
            $("#_MenuPanel").slideToggle()

            $("#info").on("click", function () {
                uuti.format_obj_txa()
            })

            $("#emailto").on("click", function () {
                var smail = $("#email_addr").val()
                var sbody = $("#outx").val()
                var str = `mailto:${smail}?subject=Calendar%20Data&body=${encodeURIComponent(sbody)}`
                $(this).attr("href", str)

                storage.input_save()

            })

            storage.input_load()
        });//


        Date.prototype.addDays = function (days) {
            var date = new Date(this.valueOf());
            date.setDate(date.getDate() + days);
            return date;
        }
        Date.prototype.toLocalY4MMDD = function () {
            var syear = this.getUTCFullYear().toString()
            var smonth = (1 + this.getMonth()).toString().padStart(2, "0")
            var sdate = this.getDate().toString().padStart(2, "0")
            return syear + smonth + sdate;
        }
        Date.prototype.toLocal_YY_MM_DD = function () {
            var syear = this.getUTCFullYear().toString().substr(2)
            var smonth = (1 + this.getMonth()).toString().padStart(2, "0")
            var sdate = this.getDate().toString().padStart(2, "0")
            return syear + "_" + smonth + "_" + sdate;
        }



        function gen_calendar(eid, inext) {
            var today = new Date()
            var todayID = today.toLocal_YY_MM_DD()

            //var yr = prompt("enter year xxxx", );
            var yr = today.getUTCFullYear()
            yr += inext

            var date = new Date(yr, 0, 1);
            //var yearEnd = new Date(2019, 11, 1);
            var trs = "", weekidx = 0, idaycounter = 0
            for (var i = 0; i <= 3650; i++) {
                var sdat = date.addDays(i);
                var iweek = sdat.getDay()
                var iyear = sdat.getUTCFullYear()
                var imont = 1 + sdat.getMonth()
                var idate = sdat.getDate()
                var sdateID = sdat.toLocal_YY_MM_DD()
                var contenteditable = ""
                if (sdateID < todayID) contenteditable = ""

                if (idaycounter >= 364) break


                if (0 === iweek) {
                    trs += `<tr><th class='thidx'>${++weekidx}<br><a class='month${imont} month_mark'>${imont}</a></th>`;
                }
                if (weekidx === 0) continue;
                idaycounter++

                trs += `<td class='month${imont}'><a class='sday' title=${sdateID}  iweek='${iweek}'>${idate}</a><div id=${sdateID} title=${sdateID} class='notes' ${contenteditable}></div></td>`;

                if (6 === iweek) {
                    trs += "</tr>";
                }
            }
            //$("#year").html(yr)
            $(`${eid} caption`).text(yr);
            $(`${eid} caption`).on("click", function () {
                $(this).parent().find("tbody").slideToggle()
            })
            $(`${eid} tbody`).html(trs)
                .find("td").on("click", function () {
                    $(".hili_td").removeClass("hili_td")
                    $(this).toggleClass("hili_td")
                })



            if (inext != 0) return


            $(`#${todayID}`).each(function () {
                $(this).parent().find(".sday").addClass("today");
                $(this)[0].scrollIntoView()
            })
        }
        function post_gen() {
            storage.load2ui()

            $(".notes").on("keyup", function () {
                storage.save_notes()
            })

            //set notes width
            var width = $("td").width()
            $(".notes").css({ "width": width - 2 })

            //
            $(".notes").on("click", function (evt) {
                evt.stopImmediatePropagation()
                var _This = this
                var display = $("#editorboard").css("display")

                var bhasHili = $(this).hasClass("hili_notes")
                $(".hili_notes").removeClass("hili_notes")
                if (!bhasHili) {
                    $(this).addClass("hili_notes")
                }
                bhasHili = $(this).hasClass("hili_notes")
                if (!bhasHili) {
                    $("#editorboard").hide()
                    return false
                }

                if ('none' == display && bhasHili) {
                    $("#editorboard").show()
                } else {
                    //$("#editxt").hide()
                }


                var htm = $(this).html()
                $("#editxt").html(htm)
                $("#edishowdate").text($(this).attr("id"))

                $("#editorboard")
                    .css({
                        position: 'absolute',
                        xxleft: evt.pageX,
                        top: 20 + evt.pageY,
                        "margin-left": "auto",
                        "margin-right": "auto",
                        display: 'block'
                    })
                    .focus()

            })
            $(".sday").on("click", function () {
                $(this).toggleClass("hili_day")
            })




            ///////////////////////////////


            $("#editxt").off("keyup").on("keyup", function (evt) {
                if (evt.keyCode === 13) {
                    // insert 2 br tags (if only one br tag is inserted the cursor won't go to the next line)
                    //document.execCommand('insertLineBreak', true, '<br/>');
                    // prevent the default behaviour of return key pressed
                    //return true;
                }
                var htms = $(this).html()
                var id = $("#edishowdate").text()
                $(`#${id}`).html(htms)
                storage.save_notes()
            })
            $("#editxt").on("blur", function () {
                var htms = $(this).html()
                var id = $("#edishowdate").text()
                $(`#${id}`).html(htms)
                storage.save_notes()

                $("#editorboard").hide()
            })
            $("#editxt").on("click", function (evt) {
                evt.stopImmediatePropagation()
                return false
            })

            var eid = "#tab1"
            var rect = $(eid)[0].getBoundingClientRect();
            var width = $(eid).width()
            $("#editorboard").css({
                "left": 30 + rect.left,
                "top": 1000,
                "width": width - 100
            })
            $("#editorboard").on("click", function () {
                $(this).hide()
            })
            $("body").on("click", function () {
                $("#editorboard").hide()
            })
        }

        var storage = {
            save_notes: function () {
                var obj = uuti.get_notes_obj_fr_ui()
                var str = JSON.stringify(obj)
                $("#info").text("size:" + str.length)
                localStorage.setItem("notes", str)
                var str = JSON.stringify(obj, null, 4)
                $("#outx").val(str)
            },
            load2ui: function () {
                var str = localStorage.getItem("notes")
                $("#outx").val(str)
                if (!str) return
                uuti.render2ui(str)
            },

            input_save: function () {
                var val = $("input").each(function () {
                    var val = $(this).val()
                    var id = $(this).attr("id")
                    if (id) {
                        localStorage.setItem(id, val)
                    }
                })
            },
            input_load: function () {
                var val = $("input").each(function () {
                    var id = $(this).attr("id")
                    if (id) {
                        var val = localStorage.getItem(id)
                        $(this).val(val)
                    }
                })
            },

        }

        var uuti = {
            get_notes_obj_fr_ui: function () {
                var data = {}
                $(".notes").each(function () {
                    var txt = $(this).html().trim()
                    var sdate = $(this).attr("id")
                    if (txt.length > 1 && txt != "<ol><li></li></ol>" && txt != "<ol type=\"a\"><li></li></ol>" && txt != "<ul><li></li></ul>") {
                        data[sdate] = txt
                    }
                })
                //var str = JSON.stringify(data, null, 4)
                return data
            },
            Clear: function () {
                if (confirm("Empty notes of Calendar?") == false) return
                $(".notes").html("")
                setTimeout(() => {
                    if (confirm("Clear all notes data in local storage? (unrecoverable)") == false) return
                    localStorage.setItem("notes", "")
                }, 1)
            },
            render2ui: function (str) {
                var obj = JSON.parse(str)
                if (!obj) return alert("not obj:" + str)
                for (let [sdate, txt] of Object.entries(obj)) {
                    $(`#${sdate}`).html(txt)
                }
            },
            Txa2uiCompare: function (str) {
                var uiObj = uuti.get_notes_obj_fr_ui()
                var str = $("#outx").val().trim()
                var txObj = JSON.parse(str)
                if (!txObj) return alert("not obj:" + str)

                var allNotes = {}
                Object.keys(uiObj).forEach(key => allNotes[key] = 0)
                Object.keys(txObj).forEach(key => allNotes[key] = 0)

                var trs = ""
                Object.keys(allNotes).forEach(key => {
                    var txt1 = uiObj[key], txt2 = txObj[key]
                    if (!txt1) txt1 = " "
                    if (!txt2) txt2 = " "
                    if (txt1 !== txt2) {
                        trs += `<tr><td>${key}</td><td><div class='cmpitm itm1'>${txt2}</div></td><td><div class='cmpitm itm2'>${txt1}</div></td></tr>`
                    }
                })
                if (trs.length === 0) return alert("identical")
                $("#cmp").html(`<table border='1' class='cmp'><thead><tr><th>date</th><th>tx</th><th>ca</th></tr></thead><tbody>${trs}</tbody></table>`)
                $(".cmpitm").on("click", function () {
                    $(this).toggleClass("Hili_cmp")
                    var id = $(this).parentsUntil("tbody").find("td:eq(0)").text()
                    var txt = $(this).html()
                    $(`#${id}`).html(txt)
                    storage.save_notes()
                })
            },
            txa2ui: function () {
                var str = $("#outx").val().trim()
                if (str.length === 0 || str[0] !== "{") return alert("no data to table")
                uuti.render2ui(str)
            },
            increase_width: function (idlta) {
                var width = $("#tab1 td").width();
                width += idlta
                $("td").width(width)
                $(".notes").css({ "width": width })
            },

            format_obj_txa: function () {
                var val = $("#outx").val()
                if (!val) return
                var obj = JSON.parse(val)
                var str = JSON.stringify(obj, null, 4)
                $("#outx").val(str)

                var w = $("#outx").width(), h = $("#outx").height()
                w = (w >= 500) ? 300 : 510, h = (h >= 500) ? 50 : 510
                $("#outx").css({ width: w, height: h })
            },


        }



        //https://shapeshed.com/html5-speech-recognition-api/
        var recognition = new webkitSpeechRecognition();
        recognition.onresult = function (event) {
            console.log(event)
        }
        //recognition.start();

    </script>
</head>

<body>

    <table border="0" id="tab0">
        <caption>Calendar</caption>
        <thead>
            <tr>
                <th idx>#</th>
                <th title="year">Sun</th>
                <th title="month">Mon</th>
                <th title="date">Tus</th>
                <th title="week">Wed</th>
                <th title="ometer">Thu</th>
                <th title="vh">Fri</th>
                <th title="miliage">Sat</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <table border="0" id="tab1">
        <caption>Calendar</caption>
        <thead>
            <tr>
                <th idx>#</th>
                <th title="year">Sun</th>
                <th title="month">Mon</th>
                <th title="date">Tus</th>
                <th title="week">Wed</th>
                <th title="ometer">Thu</th>
                <th title="vh">Fri</th>
                <th title="miliage">Sat</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <table border="1" id="tab2">
        <caption>Calendar</caption>
        <thead>
            <tr>
                <th idx>#</th>
                <th title="year">Sun</th>
                <th title="month">Mon</th>
                <th title="date">Tus</th>
                <th title="week">Wed</th>
                <th title="ometer">Thu</th>
                <th title="vh">Fri</th>
                <th title="miliage">Sat</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <!-------------------------->

    <div id="editorboard">
        <lable>Date: 20</lable><a id="edishowdate"></a>
        <div id="editxt" contenteditable>

        </div>
    </div>

    <!------------------------------>
    <!------------------------------>
    <!--------------MENU------------>
    <button id="menuPanelToggler">=</button><br />
    <div id="_MenuPanel">
        <form>
            <a id="emailto"
                href="mailto:wdingsoft@gmail.com?cc=someoneelse@theirsite.com, another@thatsite.com, me@mysite.com&bcc=lastperson@theirsite.com&subject=Big%20News&body=Body-goes-here">Emailto:</a>
            <input id="email_addr" type="text" x-webkit-speech="true"></input>
        </form>
        <button onclick="uuti.Clear();">Clear</button>
        <button onclick="storage.save_notes()">Save</button><br>
        <button onclick="uuti.txa2ui();">Txa2uiLoad</button>
        <button onclick="uuti.Txa2uiCompare();">Txa2uiCompare</button>
        <button onclick="uuti.increase_width(10);">+</button>
        <button onclick="uuti.increase_width(-10);">-</button><br>
        <div id="cmp"></div>
        <div id="info" class="row">...</div><br>
        <textarea id="outx" value='1'></textarea><br>
    </div>
    <!-------------------------->
    <!-------------------------->

    <p>
        &nbsp;</p>
</body>

</html>